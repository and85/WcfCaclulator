using ClientApp.AutoGeneratedServiceReference;
using ClientApp.ServiceClient;
using System;
using System.ServiceModel;

namespace ClientApp
{
    class Program
    {
        static void Main(string[] args)
        {
            TestAutoGeneratedClient();
            TestManuallyCreatedClient();

#if DEBUG
            Console.WriteLine("Press any key to continue...");
            Console.ReadKey();
#endif
        }

        private static void TestAutoGeneratedClient()
        {
            Console.WriteLine("Auto generated wcf client reference testing...");
            var generatedClient = new CaclulatorServiceClient();
            int square = generatedClient.Square(10);
            Console.WriteLine($"Square: {square}");

            int squareAsync = generatedClient.SquareAsync(10).Result;
            Console.WriteLine($"SquareAsync: {squareAsync}");

            try
            {
                generatedClient.Square(int.MaxValue);
            }
            catch (FaultException<CalculatationFault> exception)
            {
                Console.WriteLine($"Overflow error: {exception.Message}");
            }

            Console.WriteLine("Throwing an unhandled exception:");
            try
            {
                generatedClient.ThrowUnhandledException();
            }
            catch (FaultException exception)
            {
                Console.WriteLine($"Unhandled exception catched by global error handler and converted to fault with action: {exception.Message}");
            }
            
        }

        private static void TestManuallyCreatedClient()
        {
            Console.WriteLine("Manually created wcf client testing...");

            string endpointName = "ManuallyCreated_ICaclulatorService";
            using (var clientWrapper = new ServiceClientWrapper<Common.ICaclulatorService>(endpointName))
            {
                int squareAsync = clientWrapper.Channel.Square(10);
                Console.WriteLine($"SquareAsync: {squareAsync}");
            }
        }
    }
}
